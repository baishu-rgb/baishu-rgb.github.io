<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>录屏截图GIF录制桌面软件推荐</title>
    <url>/2022/04/23/2022-4-23-%E6%88%AA%E5%B1%8F%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>常常有人问：如何截屏？如何录GIF？如何截图？笔者就在这里给大家统一推荐一下</p>
<h2 id="桌面录屏-OBS"><a href="#桌面录屏-OBS" class="headerlink" title="桌面录屏-OBS"></a>桌面录屏-OBS</h2><p>笔者  要推荐的就是大名鼎鼎的<a href="https://obsproject.com/">OBS</a>了，也许在大家的印象中，这就是个直播推流软件，毕竟软件官网如此写道。但是它的的录屏功能也尤为强大，不仅是桌面录屏还是指定窗口录制，它都可以完美胜任，且它的画质我认为是最好的。OBS是个开源软件，所以不用担心各种限制与广告，而且背后有大佬撑腰，所以也不用担心稳定性的问题。<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/new_icon_small-r.png" alt="p1"></p>
<h3 id="录屏简易教程"><a href="#录屏简易教程" class="headerlink" title="录屏简易教程"></a>录屏简易教程</h3><p>虽然OBS如此好用，但它的使用也相对复杂，这里笔者就提一下简单的录屏教程。</p>
<ol>
<li>从官网下载软件包并安装，随后打开软件，点击场景下的加号以添加场景，在窗口中取一个名字，然后创建。<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-17_18-52-01.png" alt="p2"></li>
<li>点击来源窗口下的加号，然后点击显示器采集。<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-17_18-53-34.png" alt="p3"></li>
<li>在弹出的窗口中取一个喜欢的名字。<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-17_18-54-56.png" alt="p4"></li>
</ol>
<p>4.在弹出的窗口中点击确定，然后点击开始录制按钮就可以开始录制了，停止录制是在软件窗口中点击停止录制。<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-17_18-55-53.png" alt="p4"></p>
<hr>
<p><strong>快捷键设置</strong><br>点击文件-设置-热键就可以设置快捷键了，可以实现快捷键开始录制与关闭，还可以开始与暂停，窗口如下图，在这贴一下笔者的设置。<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-17_18-56-29.png" alt="p6"><br>其实OBS的设置与可玩性都非常强，因为本文是推荐文性质，所以不多加介绍，有兴趣与有特定需求的朋友可以自行百度，笔者在这只写非常非常基础的内容教程，望大家理解。</p>
<h2 id="桌面截图-Snipaste"><a href="#桌面截图-Snipaste" class="headerlink" title="桌面截图- Snipaste"></a>桌面截图- Snipaste</h2><p>市场上的截图软件可谓是百家争鸣，在这就推荐笔者最喜欢的<a href="https://www.snipaste.com/">Snipaste</a>吧。</p>
<h3 id="功能演示"><a href="#功能演示" class="headerlink" title="功能演示"></a>功能演示</h3><p>Snipaste的功能特别简单，只需要简单的设置一下快捷键与保存位置与是否开机启动就可以了，下面是快捷键及其他设置的界面演示：</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-18_19-49-40.png" alt="100"><br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-23_13-13-21.png" alt="11"><br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-23_13-13-26.png" alt="12"></p>
<hr>
<p><strong>截屏并处理</strong></p>
<p>正常的截屏，可以进行简易的处理，如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/%E5%8A%9F%E8%83%BD2.gif" alt="2"></p>
<p><strong>截屏并自动保存</strong></p>
<p>快速截屏，如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/%E5%8A%9F%E8%83%BD1.gif" alt="33"></p>
<p><strong>截屏并贴屏</strong></p>
<p>贴屏算是Snipaste的一个特色功能了，这也是我喜欢它的另一个主要原因</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/%E5%8A%9F%E8%83%BD3.gif" alt="功能3"></p>
<h2 id="GIF录制-ScreenToGif"><a href="#GIF录制-ScreenToGif" class="headerlink" title="GIF录制-ScreenToGif"></a>GIF录制-ScreenToGif</h2><p>这里要推荐的就是笔者认为最好最简洁（官网还提供单文件版与绿色版，非常良心）的ScreenToGIF了，这与OBS一样也是一款开源软件</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-23_13-21-39.png" alt="Snipaste_2022-04-23_13-21-39"></p>
<h3 id="功能演示-1"><a href="#功能演示-1" class="headerlink" title="功能演示"></a>功能演示</h3><p>点击录像机就可以开始录制了，界面（笔者调整了大小）如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-23_13-22-45.png" alt="Snipaste_2022-04-23_13-22-45"></p>
<ol>
<li><p>点击录制开始录制，左边的选项可以调整帧数和分辨率</p>
</li>
<li><p>录制中可以暂停，录制好了结束录制，界面如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-23_13-24-54.png" alt="Snipaste_2022-04-23_13-24-54"></p>
</li>
<li><p>停止后的界面如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/Snipaste_2022-04-23_13-25-52.png" alt="Snipaste_2022-04-23_13-25-52"></p>
</li>
</ol>
<p>点击文件可以保存，点击编辑可以对GIF动图进行编辑，保存动图如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@main/img/GIF1.gif" alt="GIF1"></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>本篇推荐结束了，笔者推荐的也许不多，但绝对是精品</p>
]]></content>
      <categories>
        <category>推荐</category>
      </categories>
      <tags>
        <tag>图片</tag>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>教程：全网通用视频下载</title>
    <url>/2022/04/09/2022-4-8-%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<hr>
<p>现在的视频网站越来越离谱，一不给下载视频，二给下载视频还加密，三下载视频还会限速，不过，只要掌握了lux yt-dlp 的配置和用法，就不会被这些视频网站宰割了（注意：本文有大量高清图片和GIF动图作辅助演示只用，请注意流量！）</p>
<h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><ol>
<li><p>下载好<a href="https://github.com/BtbN/FFmpeg-Builds/releases">FFmpeg</a> &amp; <a href="https://github.com/iawia002/lux/releases">lux</a> &amp; <a href="https://github.com/yt-dlp/yt-dlp/releases">yt-dlp</a> 的文件，下载好如下图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652527587.webp" alt="1"></p>
</li>
<li><p>将它们复制到一个专门的文件夹，然后解压，再然后为他们创建同名文件夹，并将文件存于同名文件夹中<em><strong>注意，文件夹目录中不能出现任何中文，否则会出现BUG！</strong></em>，如下图</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652528135.webp" alt="2"></p>
<p>设置系统变量的Path，注意，ffmpeg是添加bin文件夹，其他是添加程序所在的文件夹，如一下GIF动图演示</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652528387.gif" alt="3"></p>
</li>
<li><p>打开CMD窗口，依次输入 ffmpeg lux yt-dlp 已检测是否添加成功，出现以下界面即为成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652528172.webp" alt="4"><br>现在就可以用yt-dlp和lux下载视频了！:D</p>
</li>
</ol>
<h2 id="lux-的使用教程"><a href="#lux-的使用教程" class="headerlink" title="lux 的使用教程"></a>lux 的使用教程</h2><p>lux和yt-dlp相比，不支持配置文件，这是一个遗憾，但它更适合国内视频的下载</p>
<h3 id="基础常用命令"><a href="#基础常用命令" class="headerlink" title="基础常用命令"></a>基础常用命令</h3><p>lux是命令行程序，需要在CMD输入指令使用，不同的设置指令(前面应该加一个空格)可以搭配使用，设置区分大小写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lux 视频链接 #这是直接下载视频，多个视频下载只要空格后再输入视频链接(设置也要前面空格)</span><br><span class="line"> -F 文件路径 #从文本文件中提取链接下载</span><br><span class="line"> -o 文件夹路径 #设置视频保存文件夹路径</span><br><span class="line"> -O 文件名 #设置视频文件的名字</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-i 视频链接 #这是查看视频分辨率,会显示各个分辨率视频的数字</span><br><span class="line">-f 数字 视频链接 #通过上一个命令显示的数字下载指定分辨率的视频</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-C 视频链接 #可以下载字幕</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-f 播放列表链接 #下载整个播放列表的视频，仅限于bilibili</span><br><span class="line">-start 数字 #选择从哪个视频开始下载</span><br><span class="line">-end 数字 #选择下载到那个视频结束</span><br><span class="line">-items 数字,数字,数字-数字 #指定下载那个视频，用英文逗号隔开，如 1,5,6,8-10</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-c cookies #输入cookies，不同网站有不同的cookies，详情可以百度</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-n 数字 #设置下载线程，建议1</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ HTTP_PROXY= &quot; http://127.0.0.1:你的代理端口/ &quot; #http代理设置</span><br><span class="line">$ HTTP_PROXY= &quot; socks5://127.0.0.1:你的代理端口/ &quot; #socks5代理设置</span><br></pre></td></tr></table></figure>

<p>以上就是lux的基本命令了，如需更多，可以前往<a href="https://github.com/iawia002/lux">lux官网</a>查阅</p>
<h3 id="命令使用"><a href="#命令使用" class="headerlink" title="命令使用"></a>命令使用</h3><p>下载这个<a href="https://www.bilibili.com/video/BV1GJ411x7h7?spm_id_from=..search-card.all.click">B站视频</a>而且下载字幕，保存到“下载”文件夹中并命名为“你被骗了”，lux指令应该这样写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lux -o C:\Users\Administrator\Downloads -O 你被骗了 -C https://www.bilibili.com/video/BV1GJ411x7h7?spm_id_from=..search-card.all.click</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652529598.gif" alt="5"></p>
<h2 id="yt-dlp-的使用教程"><a href="#yt-dlp-的使用教程" class="headerlink" title="yt-dlp 的使用教程"></a>yt-dlp 的使用教程</h2><p>与lux相比，更适合国际网站的视频下载，且有配置文件（在命令行的使用中，同样支持多个设置项同时设定）更加方便，但它的指令更加复杂</p>
<h3 id="基础常用指令"><a href="#基础常用指令" class="headerlink" title="基础常用指令"></a>基础常用指令</h3><p><em><strong>需要注意的是：yt-dlp的配置文件和文件不能出现中文</strong></em></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yt-dlp 视频链接 #可直接下载视频，多个视频空格即可，设置项也应该空格，默认下载最高画质音质视频</span><br><span class="line"> --output 文件目录（文件命名规则） #设定文件保存路径,规则是 %(字符串)s.(或者-)%(字符串)s···</span><br><span class="line"> 常用字符串有有：title（视频标题）,ext（文件扩展名），uploader or string（UP主的名字）creator（视频的创建者），一下为举例</span><br><span class="line"> --output &quot;你的保存路径/%(title)s.%(uploader)s.%(ext)s&quot; 将文件命名为：视频名.UP主名 注意：不能连续两个/号！</span><br><span class="line"> --format 视频格式 #将视频转化为特定视频格式，支持mp4等</span><br><span class="line"> --merge-output-format 视频格式 #如果是多个文件（字幕，信息）合并为一个视频，必须用这个命令转换，否则会下载异常，其他同上</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--list-subs #列出该视频的字幕</span><br><span class="line">--sub-langs 语言 #下载指定语言的字幕，语言之间用&quot;.*,&quot;，要加双引号（英文）前后</span><br><span class="line">--sub-langs all,-live_chat #下载所有的字幕</span><br><span class="line">--sub-format srt/ass #转化字幕文件，str和ass最好</span><br><span class="line">--write-subs #生产字幕文件，是一个开始，默认关闭                    </span><br><span class="line">--write-auto-subs #写自动生产的字幕文件，与上一个命令配合，默认关闭</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--extract-audio #将视频文件转化为音频文件，是个开始，前面没 -f 时用 -x</span><br><span class="line">--audio-format #音频文件格式 #指定上一个命令生产的音频文件的格式，推荐mp3</span><br><span class="line">--audio-quality 数字 #指定音频指令，0（最好）-9（最差），5是128k，即是标准音质 </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-F 视频链接 #可以查看这个视频的分辨率</span><br><span class="line">-f 设置项 视频链接 #可以选定下载具体分辨率，常用设置项如下：</span><br><span class="line">  &quot;bestvideo[height&lt;=分辨率]+bestaudio/best[height&lt;=分辨率]&quot; #单独选择视频分辨率和音频所在视频的分辨率（如：下载1080P的视频，里面的音频是4K视频的音频）</span><br><span class="line">  &quot;bestvideo[height&lt;=分辨率]+bestaudio/best&quot; #选择视频分辨率，下载最佳音频</span><br><span class="line">  &quot;bestaudio/best[height&lt;=分辨率]&quot; #下载选择指定分辨率视频的音频且只下载音频，不合并视频</span><br><span class="line">  bestaudio/best #下载最佳音频且只下载音频，不合并视频</span><br><span class="line">  &quot;bestvideo[height&lt;=分辨率]&quot; #选择视频分辨率且只下载视频，不合并音频</span><br><span class="line">  bestvideo #下载最佳视频且只下载视频，不合并音频</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--playlist-start 数字 #与lux列表视频下载相同    </span><br><span class="line">--playlist-end 数字 #与lux列表视频下载相同             </span><br><span class="line">--playlist-items 数字··· #与lux列表视频下载相同   </span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--embed-subs #视频中嵌入字幕(仅mp4, webm和mkv视频)</span><br><span class="line">--embed-thumbnail #嵌入缩略图在视频作为封面艺术</span><br><span class="line">--embed-metadata #在视频文件中嵌入元数据</span><br><span class="line">--cookies-from-browser 浏览器名[:浏览器用户文件路径] #从用浏览器用户玩家加载cookies,支持chrome,firefox,edge···</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--proxy http://127.0.0.1:你的代理端口/ #http代理设置</span><br><span class="line">--proxy socks5://127.0.0.1:你的代理端口/ #socks5代理设置</span><br></pre></td></tr></table></figure>

<p>以上就是常用命令了，好了，我认为你已经全部掌握，你可以愉快地用yt-dlp了:D</p>
<h3 id="命令使用-1"><a href="#命令使用-1" class="headerlink" title="命令使用"></a>命令使用</h3><p>yt-dlp 的命令使用与lux大同小异，用端口6666的socks5代理下载这个<a href="https://www.youtube.com/watch?v=ViLrq6I-wks">Youbube视频</a>，转化为MP4，下载英文，简体中文字幕，如果没有则自动生产，并写入其中，保存到桌面的“PWA”的文件夹中，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yt-dlp --proxy socks5://127.0.0.1:6666/ --merge-output-format mp4 --sub-langs &quot;en.*,zh-Hans&quot; --write-subs --write-auto-subs --embed-subs --embed-thumbnail --embed-metadata --merge-output-format mp4 --output &quot;C:/Users/Administrator/Desktop/PWA/%(title)s.%(uploader)s.%(ext)s&quot; https://www.youtube.com/watch?v=ViLrq6I-wks</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652529634.gif" alt="6"></p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>yt-dlp 还支持配置文件保存（在yt-dlp的文件夹中，打开扩展名显示，创建一个文本文件，改名为“yt-dlp.conf”，扩展名也要改！），设置，根据自己的需求，下面是我的配置文件:D</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--output &quot;C:/Users/Administrator/Downloads/VidwoDownloads/%(title)s.%(uploader)s.%(ext)s&quot;</span><br><span class="line"></span><br><span class="line">--merge-output-format mp4 </span><br><span class="line"></span><br><span class="line">--sub-langs &quot;en.*,zh-Hans&quot;</span><br><span class="line">--write-subs                </span><br><span class="line">--write-auto-subs</span><br><span class="line"> </span><br><span class="line">--embed-subs</span><br><span class="line"></span><br><span class="line">--embed-thumbnail</span><br><span class="line"></span><br><span class="line">--embed-metadata</span><br><span class="line"></span><br><span class="line">--proxy socks5://127.0.0.1:6666/</span><br></pre></td></tr></table></figure>

<p>不同的人有不同的需求，文件也就不一样了，如果想抄作业的话，文件目录改一下，代理端口改一下（没有的话删除）</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652529694.gif" alt="7"></p>
<h2 id="Open-with-准备和配置"><a href="#Open-with-准备和配置" class="headerlink" title="Open with 准备和配置"></a>Open with 准备和配置</h2><p>其实在看到这篇<a href="https://www.runningcheese.com/lux">文章</a>之前，我就一直用打命令的方式下载视频，也会提前准备模板，不过麻烦了一点，看了奶大的那篇文章之后，我就明白了，这软件还可以更好用，详细的教程在奶大的文章了，我就简单过一下</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ol>
<li>安装 Python</li>
<li>在浏览器安装 Open with 扩展</li>
<li>打开扩展设置面，下载 <strong>open_with_windows.py</strong> </li>
<li>将步骤3的文件移动到CMD终端前面显示的文件夹中</li>
<li>在CMD中输入<strong>open_with_windows.py install</strong></li>
</ol>
<p>好了，这就配置好了</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol>
<li><p>打开Open with 设置面</p>
</li>
<li><p>点击“新增浏览器”</p>
</li>
<li><p>添加 lux.exe yt-dlp.exe 所在的路径，<em><strong>注意：路径要带英文双引号 “ ，且路径要有lux.exe 或者 yt-dlp.exe 这与添加系统Path是不一样的！</strong></em></p>
</li>
<li><p>在路径后面编写上文教的命令<em>（Open with 的特性，可以自动输入命令）</em>，可以当做配置文件使用，也可以命一个好听的名字，配置好了非常方便。如下面的命令，注意，命令前面也要加<strong>空格</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;C:\W-APP\APP-W-GREEN\AA-VidonDown\lux\lux.exe&quot; -o &quot;C:\Users\Administrator\Downloads&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置好后，在视频标签页右键，点击 Open with 菜单，点击你配置好的选项，就可以一键下载了:D</p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0514_1652531079.gif" alt="8"></p>
</li>
</ol>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这篇教程结束了，这篇教程针对的是Windwos系统平台，其实视频下载本不用这么麻烦，如果视频网站放开了限制，互联网上就不会有这么多的视频下载教程和现有的软件了，本文有些词语，如官网之类，若第一次提及，点击词语就可以跳转到对应的链接了</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://blog.csdn.net/z_y_z_l/article/details/121015231">https://blog.csdn.net/z_y_z_l/article/details/121015231</a></li>
<li><a href="https://www.runningcheese.com/lux">https://www.runningcheese.com/lux</a></li>
<li><a href="https://github.com/iawia002/lux">https://github.com/iawia002/lux</a></li>
<li><a href="https://www.bilibili.com/read/cv14622655">https://www.bilibili.com/read/cv14622655</a></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>视频</tag>
        <tag>下载</tag>
      </tags>
  </entry>
  <entry>
    <title>Upgit 搭配 Github 的使用</title>
    <url>/2022/05/19/Upgit/</url>
    <content><![CDATA[<hr>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于开博客的人来说，没有图床是不行的，图床不仅可以提高写作体验，还可以减少网站流量和存储支出，笔者就是用将 Github 作为图床仓库，用免费 CDN 加速使用的，速度过得去，还免费方便。图床的软件是非常多的，现在比较流行的软件 PicGo，因为有GUI所以受到很多人青睐，如果我来介绍就没有什么，所以，我现在用的并要介绍的图床就是 Upgit</p>
<h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><p><a href="https://github.com/pluveto/upgit">软件官网</a> <a href="https://github.com/pluveto/upgit/blob/main/docs/README.zh-CN.md">软件官方文档</a> <a href="https://github.com/pluveto/upgit/releases/">官方下载链接</a></p>
<p>Upgit 是一款比较小众的软件，顾名思义，就是专门上传 Github 仓库的图床软件。软件目前没有 GUI ，只有命令行和配置文件配合使用，使用门槛较高，但正因为这个特点，这个软件拥有占用资源少，不常住内存，使用快捷等优点。软件支持插件管理，目前软件支持的图床服务提供商如下：</p>
<ul>
<li>Github</li>
<li>Gitee</li>
<li>Tencent QcloudCOS</li>
<li>Qiniu Kodo</li>
<li>Upyun</li>
<li>Hello</li>
<li>Niupic</li>
<li>SM.MS</li>
<li>Imgur</li>
<li>ImgUrl.org</li>
<li>CatBox</li>
<li>LSkyPro</li>
<li>Chevereto</li>
<li>ImgBB</li>
<li>Cloudinary</li>
<li>EasyImage</li>
</ul>
<p>更多支持可输入 upgit ext ls 指令获取</p>
<h2 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h2><blockquote>
<p>笔者使用Windows 10系统，教程仅针对Windows平台</p>
</blockquote>
<ol>
<li>从软件官网下载好软件，对于大多数Windows 用户建议选择图片内方框标记版本</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0519_1652964635.webp"></p>
<ol>
<li>在任意目录创建一个文件夹，名字随意，将上一个步骤获取的名字更改为 upgit.exe 并放入这个文件夹中</li>
<li>在系统变量中的PATH添加程序所在的文件夹</li>
</ol>
<blockquote>
<p>建议添加好变量之后重启电脑，否则会出现一些奇怪的 BUG</p>
</blockquote>
<ol start="4">
<li>测试一下，在 CMD 窗口中输入 upgit -h ，出现下图即为添加成功</li>
</ol>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0519_1652964857.webp"></p>
<h2 id="程序设置"><a href="#程序设置" class="headerlink" title="程序设置"></a>程序设置</h2><h3 id="仓库新建"><a href="#仓库新建" class="headerlink" title="仓库新建"></a>仓库新建</h3><p>Upgit 有一个配置文件需要更改才能正常使用</p>
<ol>
<li>登录你的 Github 账号，新建一个仓库，名字随意，必须是公共仓库</li>
<li>点击此<a href="https://github.com/settings/tokens/new">链接</a>新建一个 Token ，名字随意，建议设置为无有效期，下面必须勾选 repo ，其他的不用勾选</li>
<li>新建以后，将 Token 记录下来</li>
</ol>
<blockquote>
<p>Token只显示一次，且不要泄露，请注意！</p>
</blockquote>
<h3 id="配置配置文件"><a href="#配置配置文件" class="headerlink" title="配置配置文件"></a>配置配置文件</h3><p>在 upgit程序目录新建一个文本文档 config.toml ，添加下列内容，或者到这里  <a href="https://github.com/pluveto/upgit/blob/main/config.sample.zh-CN.toml">官方界面</a></p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line"><span class="comment"># UPGIT 配置</span></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认上传器</span></span><br><span class="line"><span class="attr">default_uploader</span> = <span class="string">&quot;github&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传文件名的格式模板（仅特定上传器适配）</span></span><br><span class="line"><span class="comment">#   / 目录分隔符, 作用: 是区分目录</span></span><br><span class="line"><span class="comment">#   &#123;year&#125; 年份, 例如: 2022</span></span><br><span class="line"><span class="comment">#   &#123;month&#125; 月份, 例如: 02</span></span><br><span class="line"><span class="comment">#   &#123;day&#125; 天, 例如: 01</span></span><br><span class="line"><span class="comment">#   &#123;unix_ts&#125; 时间戳, 例如: 1643617626</span></span><br><span class="line"><span class="comment">#   &#123;fname&#125; 原始文件名，如 logo (不含后缀名)</span></span><br><span class="line"><span class="comment">#   &#123;fname_hash&#125; &#123;fname&#125;的 MD5 散列值</span></span><br><span class="line"><span class="comment">#   &#123;ext&#125; 文件后缀名, 例如.png</span></span><br><span class="line"><span class="comment">#   下面的例子生成的文件名预览: 2022/01/upgit_20220131_1643617626.png</span></span><br><span class="line"><span class="comment">#   如果目录不存在将会被程序自动创建</span></span><br><span class="line"><span class="attr">rename</span> = <span class="string">&quot;&#123;year&#125;/&#123;month&#125;/upgit_&#123;year&#125;&#123;month&#125;&#123;day&#125;_&#123;unix_ts&#125;&#123;ext&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 自定义输出格式</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#   &#123;url&#125; 图片文件的网络URL地址</span></span><br><span class="line"><span class="section">[output_formats]</span></span><br><span class="line"><span class="attr">&quot;bbcode&quot;</span> = <span class="string">&quot;[img]&#123;url&#125;[/img]&quot;</span></span><br><span class="line"><span class="attr">&quot;html&quot;</span> = <span class="string">&#x27;&lt;img src=&quot;&#123;url&#125;&quot; /&gt;&#x27;</span></span><br><span class="line"><span class="attr">&quot;markdown-simple&quot;</span> = <span class="string">&quot;![](&#123;url&#125;)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 直链替换规则 RawUrl -[replace]-&gt; Url</span></span><br><span class="line"><span class="comment"># -----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果您的网络访问Github异常或者缓慢，您可以尝试下面的配置以开启CDN加速</span></span><br><span class="line"><span class="comment"># [replacements]</span></span><br><span class="line"><span class="comment"># &quot;raw.githubusercontent.com&quot; = &quot;cdn.jsdelivr.net/gh&quot;</span></span><br><span class="line"><span class="comment"># &quot;/master&quot; = &quot;@master&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line"><span class="comment"># 以下为各个上传器的配置示例. 用不到的留空即可</span></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Github 上传器</span></span><br><span class="line"><span class="section">[uploaders.github]</span></span><br><span class="line"><span class="comment"># 保存文件的分支，例如 master 或 main</span></span><br><span class="line"><span class="attr">branch</span> = <span class="string">&quot;master&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 您的拥有&quot;repo&quot;权限的 Github 令牌</span></span><br><span class="line"><span class="comment"># 获取Github Token连接: https://github.com/settings/tokens</span></span><br><span class="line"><span class="attr">pat</span> = <span class="string">&quot;ghp_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 您的公共Github存储库的名称</span></span><br><span class="line"><span class="comment"># 注意: 为了让您和他人可以访问到图片资源, 您的Github仓库一定要是公开的, </span></span><br><span class="line"><span class="comment">#       在私有仓库中Github会拦截未授权的请求,你将会得到一个404.</span></span><br><span class="line"><span class="attr">repo</span> = <span class="string">&quot;repo-name&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 您的 Gtihub 用户名 </span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;username&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SMMS 上传器</span></span><br><span class="line"><span class="section">[uploaders.smms]</span></span><br><span class="line"><span class="comment"># Get token from https://sm.ms/home/apitoken</span></span><br><span class="line"><span class="attr">token</span> = <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Imgur 上传器</span></span><br><span class="line"><span class="section">[uploaders.imgur]</span></span><br><span class="line"><span class="comment"># Get token from https://api.imgur.com/oauth2/addclient</span></span><br><span class="line"><span class="comment"># See your apps in https://imgur.com/account/settings/apps</span></span><br><span class="line"><span class="attr">client_id</span> = <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Chevereto Uploader</span></span><br><span class="line"><span class="section">[uploaders.chevereto]</span></span><br><span class="line"><span class="attr">upload_url</span> = <span class="string">&quot;https://chevereto.com/api/v1/upload&quot;</span></span><br><span class="line"><span class="attr">key</span> = <span class="string">&quot;c8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8f8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 腾讯云 COS</span></span><br><span class="line"><span class="section">[uploaders.qcloudcos]</span></span><br><span class="line"><span class="attr">host</span> = <span class="string">&quot;xxx.cos.ap-chengdu.myqcloud.com&quot;</span></span><br><span class="line"><span class="attr">secret_id</span> = <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span></span><br><span class="line"><span class="attr">secret_key</span>= <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 七牛云存储</span></span><br><span class="line"><span class="section">[uploaders.qiniu]</span></span><br><span class="line"><span class="comment"># Generate Token: http://jsfiddle.net/gh/get/extjs/4.2/icattlecoder/jsfiddle/tree/master/uptoken</span></span><br><span class="line"><span class="attr">token</span> = <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:xxxxxxxxxxxxxxxxxxxxxxxxxxx:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==&quot;</span></span><br><span class="line"><span class="attr">prefix</span> = <span class="string">&quot;https://cdn.mydomain.com/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitee</span></span><br><span class="line"><span class="section">[uploaders.gitee]</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;username&quot;</span></span><br><span class="line"><span class="attr">repo</span> = <span class="string">&quot;repo-name&quot;</span></span><br><span class="line"><span class="comment"># https://gitee.com/profile/personal_access_tokens/new</span></span><br><span class="line"><span class="attr">access_token</span> = <span class="string">&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[uploaders.cloudinary]</span>m</span><br><span class="line"><span class="attr">cloud_name</span> = <span class="string">&quot;my_cloud&quot;</span></span><br><span class="line"><span class="attr">upload_preset</span> = <span class="string">&quot;preset_name&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[uploaders.easyimage]</span></span><br><span class="line"><span class="attr">request_url</span> = <span class="string">&quot;https://img.545141.com/api/index.php&quot;</span></span><br><span class="line"><span class="attr">token</span> = <span class="string">&quot;1c17b11693cb5ec63859b0ccccccccccc&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[uploaders.lskypro2]</span></span><br><span class="line"><span class="attr">host</span> = <span class="string">&quot;my_images_host&quot;</span></span><br><span class="line"><span class="attr">token</span> = <span class="string">&quot;images_host_token&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>我这里只是摘抄官方的而已，请放心复制</p>
</blockquote>
<h4 id="更改上传器"><a href="#更改上传器" class="headerlink" title="更改上传器"></a>更改上传器</h4><p>Upgit 支持两种上传器，对于一般用户而言，默认即可</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 默认上传器</span></span><br><span class="line"><span class="attr">default_uploader</span> = <span class="string">&quot;github&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="更改自动命名模板"><a href="#更改自动命名模板" class="headerlink" title="更改自动命名模板"></a>更改自动命名模板</h4><p>自动命名的模板默认配置好了，也可想笔者一样自己配合</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 上传文件名的格式模板（仅特定上传器适配）</span></span><br><span class="line"><span class="attr">rename</span> = <span class="string">&quot;&#123;year&#125;/&#123;month&#125;/picbed-&#123;month&#125;&#123;day&#125;_&#123;unix_ts&#125;&#123;ext&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>{ext} 文件扩展名模块一定是要有的，请注意！</p>
</blockquote>
<h4 id="更改自动链接"><a href="#更改自动链接" class="headerlink" title="更改自动链接"></a>更改自动链接</h4><p>可以自定义 MD html 格式输出的模板</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#   &#123;url&#125; 图片文件的网络URL地址</span></span><br><span class="line"><span class="section">[output_formats]</span></span><br><span class="line"><span class="comment">#&quot;bbcode&quot; = &quot;[img]&#123;url&#125;[/img]&quot;</span></span><br><span class="line"><span class="attr">&quot;html&quot;</span> = <span class="string">&#x27;&lt;img src=&quot;&#123;url&#125;&quot; /&gt;&#x27;</span></span><br><span class="line"><span class="attr">&quot;md&quot;</span> = <span class="string">&quot;![](&#123;url&#125;)&quot;</span></span><br></pre></td></tr></table></figure>

<p>不用的注释掉，在前面取一个简名方面调用</p>
<h4 id="CDN-加速"><a href="#CDN-加速" class="headerlink" title="CDN 加速"></a>CDN 加速</h4><p>Upgit 内置了 JsDelivr 取消注释即可自动开启</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 如果您的网络访问Github异常或者缓慢，您可以尝试下面的配置以开启CDN加速</span></span><br><span class="line"> <span class="section">[replacements]</span></span><br><span class="line"> <span class="attr">&quot;raw.githubusercontent.com&quot;</span> = <span class="string">&quot;cdn.jsdelivr.net/gh&quot;</span></span><br><span class="line"> <span class="attr">&quot;/master&quot;</span> = <span class="string">&quot;@master&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="设置-Github-账号用户名"><a href="#设置-Github-账号用户名" class="headerlink" title="设置 Github 账号用户名"></a>设置 Github 账号用户名</h4><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 您的 Gtihub 用户名 </span></span><br><span class="line"><span class="attr">username</span> = <span class="string">&quot;baishu08&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>必填，以上是示范而已</p>
</blockquote>
<h4 id="配置图床仓库名"><a href="#配置图床仓库名" class="headerlink" title="配置图床仓库名"></a>配置图床仓库名</h4><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="attr">repo</span> = <span class="string">&quot;picbed&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>必填，以上是示范而已</p>
</blockquote>
<h4 id="配置-Token"><a href="#配置-Token" class="headerlink" title="配置 Token"></a>配置 Token</h4><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 您的拥有&quot;repo&quot;权限的 Github 令牌</span></span><br><span class="line"><span class="comment"># 获取Github Token连接: https://github.com/settings/tokens</span></span><br><span class="line"><span class="attr">pat</span> = <span class="string">&quot;ghp_abcdefg114514123456789&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>必填，以上是示范而已，<del>也不会有这么臭的秘钥（恼）</del></p>
</blockquote>
<h4 id="配置仓库分支"><a href="#配置仓库分支" class="headerlink" title="配置仓库分支"></a>配置仓库分支</h4><figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 保存文件的分支，例如 master 或 main</span></span><br><span class="line"><span class="attr">branch</span> = <span class="string">&quot;main&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>必填，注意：用别的分支需要自己创建，这个软件并不会自动创建，默认 main 就OK了</p>
</blockquote>
<p>讲完了，下面就讲一下命令的用法了</p>
<h2 id="命令用法"><a href="#命令用法" class="headerlink" title="命令用法"></a>命令用法</h2><p>建议将图片先压缩，并且在图片目录打开 CMD 窗口，比较方便，上传后会在窗口显示图片直链地址</p>
<h3 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名称（带扩展名）</span><br></pre></td></tr></table></figure>

<p>这是直接上传，会按照配置文件中的重命名规则</p>
<h3 id="指定目录上传"><a href="#指定目录上传" class="headerlink" title="指定目录上传"></a>指定目录上传</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -t 指定目录</span><br></pre></td></tr></table></figure>

<p>在仓库中指定一个目录并上传</p>
<h3 id="上传数据"><a href="#上传数据" class="headerlink" title="上传数据"></a>上传数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -V</span><br></pre></td></tr></table></figure>

<p>这个命令可以上传数据交给开发者</p>
<h3 id="设置上传大小限制"><a href="#设置上传大小限制" class="headerlink" title="设置上传大小限制"></a>设置上传大小限制</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -s 数字</span><br></pre></td></tr></table></figure>

<p>Upgit 默认上传有大小限制，限制为 5MIB ，这个命令可以更改限制，0 则为无限制，用于大图片上传。<del>薅羊毛也不能太过呀</del></p>
<h3 id="设置不会自动退出"><a href="#设置不会自动退出" class="headerlink" title="设置不会自动退出"></a>设置不会自动退出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -w</span><br></pre></td></tr></table></figure>

<p>设置后，上传完图片不会自动退出，没啥用我认为</p>
<h3 id="配置文件选定"><a href="#配置文件选定" class="headerlink" title="配置文件选定"></a>配置文件选定</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -c 配置文件名</span><br></pre></td></tr></table></figure>

<p>可以指定使用哪一个配置文件上传图片</p>
<h3 id="上传后清除本地图片"><a href="#上传后清除本地图片" class="headerlink" title="上传后清除本地图片"></a>上传后清除本地图片</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -C</span><br></pre></td></tr></table></figure>

<p>作用如题</p>
<h3 id="输出原始-URL"><a href="#输出原始-URL" class="headerlink" title="输出原始 URL"></a>输出原始 URL</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -r</span><br></pre></td></tr></table></figure>

<p>显示没有 CDN加速过的链接，也就是 Github 直链</p>
<h3 id="禁用日志记录"><a href="#禁用日志记录" class="headerlink" title="禁用日志记录"></a>禁用日志记录</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -n</span><br></pre></td></tr></table></figure>

<p>作用如题</p>
<h3 id="指定输出位置"><a href="#指定输出位置" class="headerlink" title="指定输出位置"></a>指定输出位置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -o default/stdout</span><br></pre></td></tr></table></figure>

<p>作用如题，前者在终端中输出，后者输出到剪切板中</p>
<h3 id="指定输出格式"><a href="#指定输出格式" class="headerlink" title="指定输出格式"></a>指定输出格式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit 文件名 -f default/url</span><br></pre></td></tr></table></figure>

<p>作用如题，前者输出直链，后者选择格式，在配置文件配置好简名后（上文提及过）如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit text.png -f md</span><br></pre></td></tr></table></figure>

<p>上传后自动输出 MD 格式链接</p>
<blockquote>
<p>前提是需要配置</p>
</blockquote>
<h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit -h</span><br></pre></td></tr></table></figure>

<p>打开 help 界面，本教程就是由此而来</p>
<h3 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upgit ls #列出所有可安装插件</span><br><span class="line">      my #列出本地安装插件</span><br><span class="line">      add smms.jsonc #安装 SMMS上传器</span><br><span class="line">      remove smms.jsonc #卸载 SMMS上传器</span><br></pre></td></tr></table></figure>

<h2 id="与-Typora-的配合使用"><a href="#与-Typora-的配合使用" class="headerlink" title="与 Typora 的配合使用"></a>与 Typora 的配合使用</h2><ol>
<li>打开文件&gt;偏好设置&gt;图像</li>
<li>在上传服务设定中选择 <strong>Custom Command</strong></li>
<li>在命令中填写 <strong>upgit.exe</strong> 的目录，要加英文双引号 如***”D:\test\upgit.exe”***</li>
<li>点击<strong>验证图片上传选项</strong>，提示成为即为成功</li>
</ol>
<h2 id="实际演示"><a href="#实际演示" class="headerlink" title="实际演示"></a>实际演示</h2><p>笔者认为按照上面的教程就足够了，但为了更好地理解，我会做一些常用的命令的演示</p>
<p><strong>图片上传</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0519_1652967194.gif"></p>
<p><strong>上传指定目录</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0519_1652967238.gif"></p>
<p><strong>设置输出格式</strong></p>
<p><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0519_1652967268.gif"></p>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>笔者之前一直用 PicGo ，为什么又用上了 Upgit 呢？喜新厌旧而已</p>
<p>笔者之后写教程图片可能会越来越少</p>
<p>毕竟大家都有非常丰富的经验了</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>用Chrome++制作便携Chrome浏览器</title>
    <url>/2022/05/10/%E7%94%A8Chrome++%E5%88%B6%E4%BD%9C%E4%BE%BF%E6%90%BAChrome%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
    <content><![CDATA[<hr>
<p>原版的Chrome有诸多不便，比如不可用的同步，反人类的设置和限制，当然，有压迫就有反抗，民间有诸多优秀的Chrome增强软件，比如：MyChrome,Greenchrome,Chrome++等，今天，笔者就给大家详细介绍一下Chrome++的使用教程。</p>
<blockquote>
<p>随着时间的推移可能会失效，请谨慎</p>
</blockquote>
<h2 id="Chrome-的功能列表"><a href="#Chrome-的功能列表" class="headerlink" title="Chrome++的功能列表"></a>Chrome++的功能列表</h2><ul>
<li>双击关闭标签页</li>
<li>保留最后标签页（防止关闭最后一个标签页时关闭浏览器，点X不行）</li>
<li>鼠标悬停标签栏滚动</li>
<li>按住右键时滚轮滚动标签栏</li>
<li>便携设计，程序放在App目录，数据放在Data目录（不兼容原版数据，可以重装系统换电脑不丢数据）</li>
<li>移除更新错误警告（因为是绿色版没有自动更新功能）<blockquote>
<p>就便携设计笔者还要夸一句，数据是64，32位通用的，给一个大大的赞👍</p>
</blockquote>
</li>
</ul>
<h2 id="准备事项"><a href="#准备事项" class="headerlink" title="准备事项"></a>准备事项</h2><ul>
<li>Chrome离线安装包 <a href="https://www.iplaysoft.com/tools/chrome/">下载链接</a></li>
<li>Chrome++插件 <a href="https://nightly.link/shuax/chrome_plus/workflows/build/main">下载链接</a> <a href="https://github.com/shuax/chrome_plus">官网</a></li>
<li>7-ZIP</li>
<li>一定的动手能力</li>
</ul>
<p><strong>准备好了就一起来做吧！</strong></p>
<h2 id="制作教程"><a href="#制作教程" class="headerlink" title="制作教程"></a>制作教程</h2><blockquote>
<p>多少位的浏览器用多少位的chrome++。笔者以64位作为演示，随着时间的推移，教程可以会有点陈旧</p>
</blockquote>
<ol>
<li>下载好Chrome++压缩包和Chrome离线安装包<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652620920.webp" alt="1"></li>
<li>用7Z将Chrome离线安装包提取一次，得到一个 Chrome.7z ，再解压一次，得到一个 chrome-bin 文件夹，里面有一个以安装包版本为名的文件夹和两个exe文件<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652622178.webp" alt="2"></li>
<li>将 Chrome-bin 文件夹中的两个exe放在那个以版本号为名的文件夹中，将 Chrome-bin 文件夹取一个你喜欢的名，笔者这里命名为 Chrome版本号为名的文件夹也取一个你喜欢的名，笔者这里命名为 APP<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652622133.webp" alt="3"></li>
<li>将Chrome++的压缩包解压，得到一个dll<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652621933.webp" alt="4"></li>
<li>将dll拖入到App文件夹（有chrome.exe的文件夹）<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652621970.webp" alt="5"></li>
<li>运行chrome.exe 出现一下界面，这时，程序会创建Date存放数据，这就是一个便携版chrome了，你可以压缩打包随时使用<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652622011.webp" alt="6"><br>开始愉快地使用便携版浏览器吧🎇<h2 id="更新教程"><a href="#更新教程" class="headerlink" title="更新教程"></a>更新教程</h2><blockquote>
<p>便携式浏览器更新比较麻烦，但也有一些软件支持自动更新，笔者这里演示一下如何手动更新</p>
</blockquote>
</li>
<li>下载好新版本Chrome离线安装包<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652622233.webp" alt="7"></li>
<li>如上文一样解压，解压到Chrome-bin<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652621708.webp" alt="8"></li>
<li>将那两个EXE放在那个数字文件夹中并将这个文件夹命名为你想更新的浏览器的程序文件夹的名字，我这里演示是App<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652621776.webp" alt="9"></li>
<li>将新版本App文件夹覆盖到旧版App，如下面的动图<br><img src="https://cdn.jsdelivr.net/gh/baishu-rgb/picroom@master/2022/05/upgit_0515_1652622335.gif" alt="10"><br>好了，我们更新好了<blockquote>
<p>旧版中应该有chrome++的dll，更新后才是便携版</p>
</blockquote>
<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2></li>
</ol>
<ul>
<li>自动生成桌面快捷方式的bat文件<blockquote>
<p>笔者不知道有没有用，但既然有就分享一下</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">set</span> WshShell = WScript.CreateObject(<span class="string">&quot;WScript.Shell&quot;</span>)&gt;tmp.vbs</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> strDesktop = WshShell.SpecialFolders(<span class="string">&quot;Desktop&quot;</span>)&gt;&gt;tmp.vbs</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">set</span> oShellLink = WshShell.CreateShortcut(strDesktop ^&amp; <span class="string">&quot;\Google Chrome.lnk&quot;</span>)&gt;&gt;tmp.vbs <span class="comment">#改名字 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.TargetPath =<span class="string">&quot;%~dp0.\App\chrome.exe&quot;</span>&gt;&gt;tmp.vbs <span class="comment">#改目录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.WindowStyle =<span class="string">&quot;1&quot;</span>&gt;&gt;tmp.vbs</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.Hotkey = <span class="string">&quot;CTRL+SHIFT+Q&quot;</span>&gt;&gt;tmp.vbs</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.IconLocation = <span class="string">&quot;%~dp0.\App\chrome.exe, 0&quot;</span>&gt;&gt;tmp.vbs <span class="comment">#改快捷方式图标索引</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.Description = <span class="string">&quot;Google Chrome&quot;</span>&gt;&gt;tmp.vbs <span class="comment">#改名字</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.WorkingDirectory = strDesktop&gt;&gt;tmp.vbs</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> oShellLink.Save&gt;&gt;tmp.vbs</span><br><span class="line"></span><br><span class="line">call tmp.vbs</span><br><span class="line"></span><br><span class="line">del /f /q tmp.vbs</span><br></pre></td></tr></table></figure></li>
<li>Chrome++的数据文件夹Date是不分32，64位浏览器，分享制作的话很方便</li>
<li>笔者分享一个笔者制作的优化版浏览器吧，也是Chrome++，还加了一些扩展，脚本 <a href="https://cloud.189.cn/web/share?code=RZFRzq3Q7nmu">下载地址，提取码：yv9t</a><br>这篇文章结束了，感谢大家的观看</li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>浏览器</tag>
      </tags>
  </entry>
</search>
